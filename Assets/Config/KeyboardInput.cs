//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Config/KeyboardInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @KeyboardInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @KeyboardInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""KeyboardInput"",
    ""maps"": [
        {
            ""name"": ""Rooms"",
            ""id"": ""2929089d-6a56-4ded-a009-5f29e52da296"",
            ""actions"": [
                {
                    ""name"": ""Camera1"",
                    ""type"": ""Button"",
                    ""id"": ""f471d039-87a4-4160-8b91-2f66519ceee1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera2"",
                    ""type"": ""Button"",
                    ""id"": ""e7591fd6-b986-41e0-a015-df84cc30bf66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera3"",
                    ""type"": ""Button"",
                    ""id"": ""f0377e73-77c7-465e-b264-1601eec32e91"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera4"",
                    ""type"": ""Button"",
                    ""id"": ""2fb03029-8da7-420f-ab20-acebeda39872"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera5"",
                    ""type"": ""Button"",
                    ""id"": ""99623db1-0d4d-4215-8a45-c5e938588b3d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""702105b0-65f3-4d3e-ba79-6130a07082e0"",
                    ""path"": ""<Keyboard>/#(1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3efeba0-3ab0-4cf2-aa00-07f724e7651b"",
                    ""path"": ""<Keyboard>/#(2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c7049c2-ef16-4926-9cc2-237e8d303f9b"",
                    ""path"": ""<Keyboard>/#(3)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0841871c-d1eb-4d73-9787-a152d98cd29f"",
                    ""path"": ""<Keyboard>/#(4)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c59fd3fe-ccdc-450f-adff-71c4b1611568"",
                    ""path"": ""<Keyboard>/#(5)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Rooms
        m_Rooms = asset.FindActionMap("Rooms", throwIfNotFound: true);
        m_Rooms_Camera1 = m_Rooms.FindAction("Camera1", throwIfNotFound: true);
        m_Rooms_Camera2 = m_Rooms.FindAction("Camera2", throwIfNotFound: true);
        m_Rooms_Camera3 = m_Rooms.FindAction("Camera3", throwIfNotFound: true);
        m_Rooms_Camera4 = m_Rooms.FindAction("Camera4", throwIfNotFound: true);
        m_Rooms_Camera5 = m_Rooms.FindAction("Camera5", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Rooms
    private readonly InputActionMap m_Rooms;
    private List<IRoomsActions> m_RoomsActionsCallbackInterfaces = new List<IRoomsActions>();
    private readonly InputAction m_Rooms_Camera1;
    private readonly InputAction m_Rooms_Camera2;
    private readonly InputAction m_Rooms_Camera3;
    private readonly InputAction m_Rooms_Camera4;
    private readonly InputAction m_Rooms_Camera5;
    public struct RoomsActions
    {
        private @KeyboardInput m_Wrapper;
        public RoomsActions(@KeyboardInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Camera1 => m_Wrapper.m_Rooms_Camera1;
        public InputAction @Camera2 => m_Wrapper.m_Rooms_Camera2;
        public InputAction @Camera3 => m_Wrapper.m_Rooms_Camera3;
        public InputAction @Camera4 => m_Wrapper.m_Rooms_Camera4;
        public InputAction @Camera5 => m_Wrapper.m_Rooms_Camera5;
        public InputActionMap Get() { return m_Wrapper.m_Rooms; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RoomsActions set) { return set.Get(); }
        public void AddCallbacks(IRoomsActions instance)
        {
            if (instance == null || m_Wrapper.m_RoomsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RoomsActionsCallbackInterfaces.Add(instance);
            @Camera1.started += instance.OnCamera1;
            @Camera1.performed += instance.OnCamera1;
            @Camera1.canceled += instance.OnCamera1;
            @Camera2.started += instance.OnCamera2;
            @Camera2.performed += instance.OnCamera2;
            @Camera2.canceled += instance.OnCamera2;
            @Camera3.started += instance.OnCamera3;
            @Camera3.performed += instance.OnCamera3;
            @Camera3.canceled += instance.OnCamera3;
            @Camera4.started += instance.OnCamera4;
            @Camera4.performed += instance.OnCamera4;
            @Camera4.canceled += instance.OnCamera4;
            @Camera5.started += instance.OnCamera5;
            @Camera5.performed += instance.OnCamera5;
            @Camera5.canceled += instance.OnCamera5;
        }

        private void UnregisterCallbacks(IRoomsActions instance)
        {
            @Camera1.started -= instance.OnCamera1;
            @Camera1.performed -= instance.OnCamera1;
            @Camera1.canceled -= instance.OnCamera1;
            @Camera2.started -= instance.OnCamera2;
            @Camera2.performed -= instance.OnCamera2;
            @Camera2.canceled -= instance.OnCamera2;
            @Camera3.started -= instance.OnCamera3;
            @Camera3.performed -= instance.OnCamera3;
            @Camera3.canceled -= instance.OnCamera3;
            @Camera4.started -= instance.OnCamera4;
            @Camera4.performed -= instance.OnCamera4;
            @Camera4.canceled -= instance.OnCamera4;
            @Camera5.started -= instance.OnCamera5;
            @Camera5.performed -= instance.OnCamera5;
            @Camera5.canceled -= instance.OnCamera5;
        }

        public void RemoveCallbacks(IRoomsActions instance)
        {
            if (m_Wrapper.m_RoomsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRoomsActions instance)
        {
            foreach (var item in m_Wrapper.m_RoomsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RoomsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RoomsActions @Rooms => new RoomsActions(this);
    public interface IRoomsActions
    {
        void OnCamera1(InputAction.CallbackContext context);
        void OnCamera2(InputAction.CallbackContext context);
        void OnCamera3(InputAction.CallbackContext context);
        void OnCamera4(InputAction.CallbackContext context);
        void OnCamera5(InputAction.CallbackContext context);
    }
}
